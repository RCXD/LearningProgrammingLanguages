'Hello! World'
# - 실행방법1. 콘트롤 엔터
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# - 실행방법2. 알트 엔터: 실행하고 제 자리에 남기
'Hello! World'
# 프로그래밍은 같은 결과를 여러가지 방법으로 만들 수 있습니다.
1+1
print(1+1)
## 1. 문자
## - 문자는 작은따옴표 혹은 큰 따옴표로 묶인 데이터입니다.
'hello world'
"korea"
## typeof(값): 값이 어떤 데이터 형태인지 알려주는 함수
typeof('hello world')
## 2. 숫자
1
2
3.14
typeof(1)
typeof(3.14)
## 3. 논리
TRUE
FALSE
typeOf(TRUE)
typeof(TRUE)
# 기본 연산
## - 사칙연산
1 + 1
2 - 2
3 * 3
4 / 4
### 실습하기. 7을 3으로 나누어주세요.
# - / 연산은 몫과 나머지를 구하는 연산
7/3
# - %/% 연산은 몫을 구하는 연산
7%/%3
# - % 연산은 나머지를 구하는 연산
7%3
# - %% 연산은 나머지를 구하는 연산
7%%3
##
1 + 1
'1' + '1'
3.14 - 1.1
TRUE + TRUE
# 날짜라는 것은?
## 날짜는 데이터형태가 아닙니다. 인간의 편의에 의해서 만든 형태. 국마다 표기법도 다르고, 요일도 다름
'2020-08-08'
# 날짜라는 것은?
## 날짜는 데이터형태가 아닙니다. 인간의 편의에 의해서 만든 형태. 국마다 표기법도 다르고, 요일도 다름
'2020-08-08' + 1
'2020-08-08' + '1'
## 외부패키지 사용하는 방법
### 1. 외부패키지 설치하기(스마트폰에서 앱 설치)
install.packages('lubridate')
## 외부패키지 사용하는 방법
### 1. 외부패키지 설치하기(스마트폰에서 앱 설치)
install.packages('lubridate')
### 2. 외부패키지 사용하기(스마트폰에서 앱 실행)
#### - 아래의 2가지 방법 모두 가능
library('lubridate')
library(lubridate)
### 2. 외부패키지 사용하기(스마트폰에서 앱 실행)
#### - 아래의 2가지 방법 모두 가능
library('lubridate')
library(lubridate)
## 외부패키지 사용하는 방법
### 1. 외부패키지 설치하기(스마트폰에서 앱 설치)
install.packages('lubridate')
### 2. 외부패키지 사용하기(스마트폰에서 앱 실행)
#### - 아래의 2가지 방법 모두 가능
library('lubridate')
now()
# 실습하기.
# - 년도를 출력해주세요
#   : year(날짜값)
year(now())
# - 월을 출력해주세요.
#   : month(날짜값)
month(now())
# - 일을 출력해주세요.
#   : day(날짜값)
day(now())
# 하루(1) day를 데이터로 만들어보기
days(1)
# 실습하기. 오늘에서부터 하루를 더해서 출력해주세요.
now()
# 실습하기. 오늘에서부터 하루를 더해서 출력해주세요.
now() + days(1)
now() - days(-1)
# 실습하기. 오늘에서부터 1주일 앞을 출력해주세요.
now() + days(7)
now() + week(1)
now() + weeks(1)
# 실습하기. 오늘에서부터 1주일 이전을 출력해주세요.
now() + days(-7)
now() - weeks(1)
## 변수
### - 변수라는 것은 재사용을 위하여 만듭니다.
### - 변수에는 값(데이터)을 저장해둡니다.
### - 변수명 유의사항. 영문소문자만 하세요.
a
## 변수
### - 변수라는 것은 재사용을 위하여 만듭니다.
### - 변수에는 값(데이터)을 저장해둡니다.
### - 변수명 유의사항. 영문소문자만 하세요.
a <- 1
a
# 변수를 만드는 법
b <- '1'
b
'1' -> c
c
d = '1'
d
가 <- 1
가;
가;
가;
가;
가;
a
# 실습하기. a의 자료형을 확인해주세요.
typeof(a)
a + 100
a + 1
a
# 실습하기. a의 값을 2로 변경해주세요.
a <- 2
a
a + 100
a + 1
now()
crr <- now()
crr
crr
crr
# 실습하기. crr의 월을 2월로 변경해주세요.
## - crr의 월을 조회해보세요
month(crr)
# 실습하기. crr의 월을 2월로 변경해주세요.
## - crr의 월을 조회해보세요
month(crr)b <- 2
crr
# 실습하기. crr의 월을 2월로 변경해주세요.
## - crr의 월을 조회해보세요
month(crr) <- 2
crr
# R에서 0을 처리하는 방법
1000
100000000000
5e3
5e10
# 비교연산자
# - 무조건 TRUE, FALSE로 응답합니다.
## 같은가? 다른가? 같거나 큰가? 같거나 작은가? 등등
x <- 10
y <- 20
# 비교연산자
# - 무조건 TRUE, FALSE로 응답합니다.
## 같은가? 다른가? 같거나 큰가? 같거나 작은가? 등등
x <- 10
y <- 20
# 비교연산자
# - 무조건 TRUE, FALSE로 응답합니다.
## 같은가? 다른가? 같거나 큰가? 같거나 작은가? 등등
x <- 10
y <- 20
x == y
x == y # 같은가
x != y # 다른가
x > y  # 크다
x >= y
x < y
x <= y
'가' == '가'
'가' == '나'
# 논리 연산자
## ! 아니다
## | or(또는)  <-- 엔터키위의 원달러표시를 쉬트프 누르고
## & and(그리고)
TRUE
# 논리 연산자
## ! 아니다
## | or(또는)  <-- 엔터키위의 원달러표시를 쉬트프 누르고
## & and(그리고)
TRUE
# 논리 연산자
## ! 아니다
## | or(또는)  <-- 엔터키위의 원달러표시를 쉬트프 누르고
## & and(그리고)
!TRUE
(1 == 1)
!(1 == 1)
TRUE | FALSE
TRUE | FALSE
FALSE | TRUE
(1==1) | (1==2)
TRUE & FALSE
FALSE & TRUE
(1==1) & (1==2)
# 총합
sum(1, 2, 3)
# 총합
sum(1, 2, 3, 4, 5)
1:100
sum(1:100)
# 최소값
min(1:100)
# 최대값
max(1:100)
# 실습하기. 평균을 구해주세요
average(1:100)
# 실습하기. 평균을 구해주세요
mean(1:100)
